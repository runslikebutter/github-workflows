name: build_artifacts

on:
  workflow_call:
    inputs:
      branch:
        description: "name of the branch to build"
        required: true
        type: string
      create_sentry_artifact:
        description: "whether to upload an artifact for sentry release"
        required: false
        default: false
        type: boolean
      mac_artifact_name:
        description: "what to name the uploaded mac build artifact"
        required: false
        default: dist-mac
        type: string
      linux_artifact_name:
        description: "what to name the uploaded linux build artifact"
        required: false
        default: dist-linux
        type: string
      sentry_artifact_name:
        description: "what to name the uploaded sentry build artifact"
        required: false
        default: dist-sentry
        type: string
      windows_artifact_name:
        description: "what to name the uploaded windows build artifact"
        required: false
        default: dist-win
        type: string
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      APPLE_APP_PASSWORD:
        required: true
      APPLE_ID:
        required: true
      BMX_ACCESS_TOOLKIT_SSH_KEY:
        required: true
      CACHE_VERSION:
        required: true
      CSC_KEY_PASSWORD:
        required: true
      CSC_LINK:
        required: true

jobs:
  build_on_win:
    name: Build Windows
    runs-on: windows-latest
    steps:
      - name: Check out branch
        uses: actions/checkout@master
        with:
          ref: ${{ inputs.branch }}
      - name: Build
        uses: runslikebutter/github-workflows/actions/build-windows@v5
        with:
          artifact_name: ${{ inputs.windows_artifact_name }}
          cache_version: ${{ secrets.CACHE_VERSION }}
          ssh_key: ${{ secrets.BMX_ACCESS_TOOLKIT_SSH_KEY }}

  build_on_linux:
    name: Build Linux
    runs-on: ubuntu-latest
    steps:
      - name: Check out branch
        uses: actions/checkout@master
        with:
          ref: ${{ inputs.branch }}
      - name: Build
        uses: runslikebutter/github-workflows/actions/build-linux@v5
        with:
          artifact_name: ${{ inputs.linux_artifact_name }}
          cache_version: ${{ secrets.CACHE_VERSION }}
          create_sentry_artifact: ${{ inputs.create_sentry_artifact }}
          sentry_artifact_name: ${{ inputs.sentry_artifact_name }}
          ssh_key: ${{ secrets.BMX_ACCESS_TOOLKIT_SSH_KEY }}

  build_on_mac:
    name: Build Mac
    runs-on: macos-latest
    steps:
      - name: Check out branch
        uses: actions/checkout@master
        with:
          ref: ${{ inputs.branch }}
      - name: Build
        uses: runslikebutter/github-workflows/actions/build-mac@v5
        with:
          artifact_name: ${{ inputs.mac_artifact_name }}
          cache_version: ${{ secrets.CACHE_VERSION }}
          ssh_key: ${{ secrets.BMX_ACCESS_TOOLKIT_SSH_KEY }}
          apple_app_password: ${{ secrets.APPLE_APP_PASSWORD }}
          apple_id: ${{ secrets.APPLE_ID }}
          csc_key_password: ${{ secrets.CSC_KEY_PASSWORD }}
          csc_link: ${{ secrets.CSC_LINK }}

  s3_artifact_upload:
    name: S3 features & latest uploadf
    runs-on: ubuntu-latest
    needs: [build_on_linux, build_on_win, build_on_mac]
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: us-east-1
      AWS_DEFAULT_OUTPUT: json
    steps:
      # figure out where to upload artifacts to in S3
      # if feature branch, upload to features/[branch]; otherwise upload to [branch]/latest
      - name: Set S3 path
        id: set_s3_path
        run: |
          if [[ "${{ inputs.branch }}" == *MET* ]]
          then
            echo ::set-output name=path::$(echo artifacts/monarch-app/features/${{ inputs.branch }})
          else
            echo ::set-output name=path::$(echo artifacts/monarch-app/${{ inputs.branch }}/latest)
          fi

      - name: Create packages directory
        shell: bash
        run: mkdir temppkg

      - name: Download Linux artifacts
        uses: actions/download-artifact@v2
        with:
          name: ${{ inputs.linux_artifact_name }}
          path: temppkg

      - name: Download Windows artifacts
        uses: actions/download-artifact@v2
        with:
          name: ${{ inputs.windows_artifact_name }}
          path: temppkg

      - name: Download Mac artifacts
        uses: actions/download-artifact@v2
        with:
          name: ${{ inputs.mac_artifact_name }}
          path: temppkg

      - name: Copy artifacts to S3
        run: |
          BUCKET=monarch-np-util

          aws s3 sync temppkg s3://$BUCKET/${{ steps.set_s3_path.outputs.path }} --delete

  # only archive artifacts for non-feature branches (e.g. develop, qa, release)
  s3_artifact_upload_to_archive:
    name: S3 archive upload
    if: contains(inputs.branch, 'MET') != true
    runs-on: ubuntu-latest
    needs: [build_on_linux, build_on_win, build_on_mac]
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: us-east-1
      AWS_DEFAULT_OUTPUT: json
    steps:
      - name: Check out branch
        uses: actions/checkout@master
        with:
          ref: ${{ inputs.branch}}

      - name: Set S3 archive path
        id: set_s3_archive_path
        run: |
          # get version from package.json
          VERSION=$( jq -r '.version' ./panel-app/package.json )
          echo ::set-output name=path::$(echo artifacts/monarch-app/archive/${{ inputs.branch }}/v$VERSION)

      - name: Create packages directory
        shell: bash
        run: mkdir temppkg

      - name: Download Linux artifacts
        uses: actions/download-artifact@v2
        with:
          name: ${{ inputs.linux_artifact_name }}
          path: temppkg

      - name: Download Windows artifacts
        uses: actions/download-artifact@v2
        with:
          name: ${{ inputs.windows_artifact_name }}
          path: temppkg

      - name: Download Mac artifacts
        uses: actions/download-artifact@v2
        with:
          name: ${{ inputs.mac_artifact_name }}
          path: temppkg

      - name: Copy artifacts to S3 archive
        run: |
          BUCKET=monarch-np-util

          aws s3 sync temppkg s3://$BUCKET/${{ steps.set_s3_archive_path.outputs.path }}
